<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= product.SHname %> - harishMobile</title>
    <script
      src="https://kit.fontawesome.com/3a523928fc.js"
      crossorigin="anonymous"
    ></script>
    <link rel="stylesheet" href="/css/storeHeader.css" />
    <link rel="stylesheet" href="/css/detailPage.css" />
  </head>
  <body>
    <%- include(`../partials/storeHeader`) %>
    <%- include(`../partials/fonts`) %>
    <%- include(`../partials/cartAddToast`) %>
    <script src="/javascript/store.js"></script>
  <script>
document.addEventListener("DOMContentLoaded", () => {
  /* ========== SPECIFICATIONS SECTION ========== */
  const specsSection = document.getElementById("specs");
  const specsTiles = document.getElementById("specsTiles");
  const seeMoreBtn = document.getElementById("seeMoreBtn");
  if (!specsSection || !specsTiles) return;

  const tiles = specsTiles.querySelectorAll(".spec-tile");
  const visibleCount = 3;
  let expanded = false;

  // --- Setup tile open/close ---
  tiles.forEach((tile) => {
    const head = tile.querySelector(".spec-head");
    const body = tile.querySelector(".spec-body");
    if (!head || !body) return;

    // Remove the `hidden` attribute so we can measure and animate height
    if (body.hasAttribute("hidden")) body.removeAttribute("hidden");

    body.style.overflow = "hidden";
    body.style.maxHeight = "0px";
    body.style.transition = "max-height 0.3s ease";

    // ensure aria state is explicit
    head.setAttribute("aria-expanded", "false");

    head.addEventListener("click", () => {
      const isOpen = tile.classList.toggle("open");
      head.setAttribute("aria-expanded", String(isOpen));

      if (isOpen) {
        // expand
        body.style.maxHeight = body.scrollHeight + "px";
        // after transition, allow natural height (so content can reflow)
        setTimeout(() => {
          if (tile.classList.contains("open")) body.style.maxHeight = "none";
        }, 300);
      } else {
        // collapse
        if (body.style.maxHeight === "none") {
          // set it back to measured px so transition works
          body.style.maxHeight = body.scrollHeight + "px";
        }
        requestAnimationFrame(() => (body.style.maxHeight = "0px"));
      }
    });
  });

  // --- See more / see less ---
  function collapseView() {
    tiles.forEach((tile, i) => {
      tile.style.display = i < visibleCount ? "block" : "none";
    });
    seeMoreBtn.textContent = "See more";
    specsSection.classList.add("collapsed");
  }

  function expandView() {
    tiles.forEach((tile) => (tile.style.display = "block"));
    seeMoreBtn.textContent = "See less";
    specsSection.classList.remove("collapsed");
  }

  if (tiles.length > visibleCount) {
    collapseView();
    seeMoreBtn.style.display = "block";
  } else {
    seeMoreBtn.style.display = "none";
  }

  seeMoreBtn.addEventListener("click", () => {
    expanded = !expanded;
    expanded ? expandView() : collapseView();
    if (!expanded)
      specsTiles.scrollIntoView({ behavior: "smooth", block: "start" });
  });

  /* ========== DELIVERY SECTION ========== */
  const deliveryElem = document.getElementById("delivery-date");
  if (deliveryElem) {
    const today = new Date();
    const deliveryDate = new Date(today);
    deliveryDate.setDate(today.getDate() + 7);
    const opts = { weekday: "long", day: "numeric", month: "short", year: "numeric" };
    const parts = deliveryDate.toLocaleDateString("en-GB", opts).split(" ");
    const formatted = `${parts[0].replace(",", "")}, ${parts[1]} ${parts[2]}, ${parts[3]}`;
    deliveryElem.textContent = `Delivery by ${formatted}`;
  }

  /* ========== Resize Handler ========== */
  window.addEventListener("resize", () => {
    tiles.forEach((tile) => {
      const body = tile.querySelector(".spec-body");
      if (tile.classList.contains("open") && body) {
        body.style.maxHeight = body.scrollHeight + "px";
        setTimeout(() => {
          if (tile.classList.contains("open")) body.style.maxHeight = "none";
        }, 300);
      }
    });
  });
});
</script>




    <a class="back-btn" href="/"><i class="fa-solid fa-arrow-left"></i>  Back</a>

    <!-- Product detail slider -->
<div id="upwrapIS">
  <section id="imageSlider">
    <div class="carousel" id="carousel">
      <div class="carousel-track">
        <% if (product.productDetail && product.productDetail.images && product.productDetail.images.length) { %>
          <!-- First image -->
          <img id="slide" src="/uploads/<%= product.productDetail.images[0] %>" alt="Detail 1" />

          <!-- Video goes second if exists -->
          <% if (product.productDetail.video) { %>
            <video id="slide" src="/uploads/<%= product.productDetail.video %>" controls></video>
          <% } %>

          <!-- Remaining images -->
          <% product.productDetail.images.slice(1).forEach(function(img, idx) { %>
            <img id="slide" src="/uploads/<%= img %>" alt="Detail <%= idx+2 %>" />
          <% }); %>
        <% } %>
      </div>
      <div class="carousel-dots" id="dots"></div>
    </div>
  </section>
</div>

<!-- Product title + category -->
<div class="pd-head">
  <% const categoryLabel = { SH: 'Refurbished', N: 'New' }[product.category]; %>
  <h1 class="pd-title">
    <%= product.name %><%= categoryLabel ? ' - ' + categoryLabel : '' %>
  </h1>
</div>



<!-- Condition + Specs -->
<% 
  const _s = v => (v == null ? '' : String(v).trim());
  const ramV = _s(product.specs?.memory?.ram);
  const stoV = _s(product.specs?.memory?.storage);
  const colV = _s(product.specs?.design?.color);
  const addGB = v => v ? (/\d/.test(v) && !/gb/i.test(v) ? `${v}GB` : v) : '';
  const ram = addGB(ramV);
  const storage = addGB(stoV);
%>

<div class="pd-specs">
  <% if (product.condition) { %>
    <div class="detail-row">
      <span class="detail-label">Condition :</span>
      <span class="detail-value"><%= product.condition %></span>
    </div>
  <% } %>

  <% if (ram) { %>
    <div class="detail-row">
      <span class="detail-label">RAM :</span>
      <span class="detail-value"><%= ram %></span>
    </div>
  <% } %>

  <% if (storage) { %>
    <div class="detail-row">
      <span class="detail-label">Storage :</span>
      <span class="detail-value"><%= storage %></span>
    </div>
  <% } %>

  <% if (colV) { %>
    <div class="detail-row">
      <span class="detail-label">Color :</span>
      <span class="detail-value"><%= colV %></span>
    </div>
  <% } %>
</div>

<!-- Price Section -->
<div class="pd-price">
  <div class="price-current">₹<%= product.price %></div>
  
    <% if (product.mrp) { %>
    <div class="price-mrp"><s>₹<%= product.mrp %></s></div>
      <% } %>
      <% if (product.discount) { %>
    <div class="price-discount"><%= product.discount %>% Off</div>
  <% } %>
  
  
</div>

<!-- Assurance badges -->
<div class="assurance-wrap" aria-label="Assurance details">
  <div class="assurance-item" role="group" aria-label="7-day exchange">
    <img src="/images/exchange1.png">
    <span>7-day exchange</span>
  </div>

  <div class="assurance-item" role="group" aria-label="Secure delivered">
    <img src="/images/ship.png">
    <span >Secure delivered</span>
  </div>

  <div class="assurance-item" role="group" aria-label="No return allowed">
    <img src="/images/ban.png">
    <span id="red">No return allowed</span>
  </div>
</div>

<!-- Delivery Section -->
<section class="delivery-section" id="delivery">
  <div class="delivery-icon">
     <h2>Estimated Delivery :</h2>
    
  </div>
  <div class="delivery-text">
     <img src="/images/truck1.png">
   
    <p id="delivery-date">Loading...</p>
  </div>
</section>

<!-- Product Details / Specifications -->
<section class="specs-section" id="specs">
  <h2 class="specs-title">Specification :</h2>

  <% 
    const sectionMap = [
      ['general','General'],
      ['backCamera','Rear Camera'],
      ['memory','Memory & Storage'],
      ['selfieCamera','Front Camera'],
      ['design','Design'],
      ['display','Display'],
      ['connectivity','Network & Connectivity'],
      ['performance','Performance'],
      ['battery','Battery'],
      ['sound','Sound'],
      ['sensors','Sensors'],
    ];
  %>

  <div class="specs-tiles" id="specsTiles">
    <% sectionMap.forEach(([key, label]) => {
         const sec = product.specs?.[key] || {};
         const entries = Object.entries(sec)
           .filter(([k,v]) => k !== 'merged' && v && String(v).trim() !== '');
         if (entries.length) { %>

      <div class="spec-tile">
        <button class="spec-head" type="button" aria-expanded="false">
          <span><%= label %></span>
          <i class="fa-solid fa-chevron-down" aria-hidden="true"></i>
        </button>

        <div class="spec-body" hidden>
          <ul class="spec-list">
            <% entries.forEach(([k, v]) => {
                 const prettyKeyMap = {
                   cpu:'Processor', ram:'RAM', storage:'Storage', wifi:'Wi-Fi',
                   bluetooth:'Bluetooth', jack:'3.5mm Jack', stereoSpeaker:'Stereo Speaker',
                   screenToBodyRatio:'Screen-to-body ratio', refreshRate:'Refresh rate',
                   peakBrightness:'Peak brightness', osSystem:'OS', osUpdates:'OS updates',
                   securityUpdates:'Security updates', chargingPort:'Charging port',
                   simSize:'SIM size', countryOfOrigin:'Country of origin',
                   video:'Video', type:'Type', capacity:'Capacity', charging:'Charging',
                   wirelessCharging:'Wireless charging', fingerprint:'Fingerprint',
                   other:'Other', dimensions:'Dimensions', buildMaterial:'Build material',
                   model:'Model', dualSim:'Dual SIM', protection:'Protection',
                   notch:'Notch', network:'Network', color:'Color', size:'Size',
                   resolution:'Resolution', weight:'Weight'
                 };
                 const pretty = prettyKeyMap[k] || k.replace(/([A-Z])/g, ' $1').replace(/^./, s => s.toUpperCase());
                 const val = (v instanceof Date || (typeof v === 'string' && !isNaN(Date.parse(v))))
                   ? new Date(v).toLocaleDateString('en-IN')
                   : v;
            %>
              <li>
                <span class="spec-name"><%= pretty %></span>
                <span class="spec-value"><%= val %></span>
              </li>
            <% }) %>
          </ul>
        </div>
      </div>

    <% } }); %>
  </div>

  <!-- See more / See less button -->
  <div class="see-more-wrap">
    <button id="seeMoreBtn" class="see-more-btn" type="button">See more</button>
  </div>
</section>

<!-- Related Products Section -->
<section class="related-products">
  <div class="sectionHeading">
    <h2 id="cardHeading">More Products</h2>
  </div>

  <div class="CardSection">
    <% 
      const currentId = String(product._id);
      let filteredProducts = [];

      if (product.category === 'SH') {
        filteredProducts = (registeredSHmobile || []).filter(m => String(m._id) !== currentId);
        filteredProducts.slice(0, 8).forEach(m => {
          const _s = v => (v == null ? '' : String(v).trim());
          const base = _s(m.SHname);
          const net = _s(m.specs?.connectivity?.network).toUpperCase();
          const ramV = _s(m.specs?.memory?.ram);
          const stoV = _s(m.specs?.memory?.storage);
          const colV = _s(m.specs?.design?.color).toLowerCase();
          const addGB = v => v ? (/\d/.test(v) && !/gb/i.test(v) ? `${v}GB` : v) : '';
          const ram = addGB(ramV);
          const storage = addGB(stoV);
          const parts = []; if (ram) parts.push(ram); if (storage) parts.push(storage);
          let parenText = parts.join('/'); if (colV) parenText = parenText ? `${parenText}, ${colV}` : colV;
          const displayName = [base, net].filter(Boolean).join(' ') + (parenText ? ` (${parenText})` : '');
    %>

    <a class="MobileCard" href="/Second-Hand/Details/<%= m._id %>">
      <img class="cardLogo" src="/images/cardLogo1.png" />
      <div id="card-image">
        <img class="mobileImage" src="/uploads/<%= m.SHimage %>" alt="<%= displayName %>" />
      </div>
      <div id="card-details">
        <h3 id="card-name"><%= displayName %></h3>
        <p class="mobilecCondition">Condition: <%= m.condition %></p>
        <div id="card-discout">
          <div class="mobileDiscount">-<%= m.SHdiscount %>%</div>
          <div class="mobileMRP">₹<%= m.SHmrp %></div>
        </div>
        <div class="finalPriceWrap">
          <div id="ribbon-wrap">
            <div class="finalPrice">₹<%= m.SHprice %></div>
          </div>
          <div class="cornerRibbonLeft"></div>
        </div>
      </div>
    </a>

    <% }); } else if (product.category === 'N') { 
      filteredProducts = (registeredNmobile || []).filter(m => String(m._id) !== currentId);
      filteredProducts.slice(0, 8).forEach(m => {
        const _s = v => (v == null ? '' : String(v).trim());
        const base = _s(m.Nname);
        const net = _s(m.specs?.connectivity?.network).toUpperCase();
        const ramV = _s(m.specs?.memory?.ram);
        const stoV = _s(m.specs?.memory?.storage);
        const colV = _s(m.specs?.design?.color).toLowerCase();
        const addGB = v => v ? (/\d/.test(v) && !/gb/i.test(v) ? `${v}GB` : v) : '';
        const ram = addGB(ramV);
        const storage = addGB(stoV);
        const parts = []; if (ram) parts.push(ram); if (storage) parts.push(storage);
        let parenText = parts.join('/'); if (colV) parenText = parenText ? `${parenText}, ${colV}` : colV;
        const displayName = [base, net].filter(Boolean).join(' ') + (parenText ? ` (${parenText})` : '');
    %>

    <a class="MobileCard" href="/New/Details/<%= m._id %>">
      <img class="cardLogo" src="/images/cardLogo1.png" />
      <div id="card-image">
        <img class="mobileImage" src="/uploads/<%= m.Nimage %>" alt="<%= displayName %>" />
      </div>
      <div id="card-details">
        <h3 id="card-name"><%= displayName %></h3>
        <div id="card-discout">
          <div class="mobileDiscount">-<%= m.Ndiscount %>%</div>
          <div class="mobileMRP">₹<%= m.Nmrp %></div>
        </div>
        <div class="finalPriceWrap">
          <div id="ribbon-wrap">
            <div class="finalPrice">₹<%= m.Nprice %></div>
          </div>
          <div class="cornerRibbonLeft"></div>
        </div>
      </div>
    </a>

    <% }); } %>
  </div>
</section>


  <div class="payment">
    <h2>Payment Methods :</h2>
    <img src="/images/payment.jpeg">

  </div>




    <div class="buy-form">
  <form action="/cart/add" method="POST">
    <input type="hidden" name="productId" value="<%= product.id %>" />
    <input type="hidden" name="qty" value="1" />
    <input type="hidden" name="buyNow" value="true" />  <!-- 👈 Add this -->
    <button id="add" type="submit"> <i class="fa-solid fa-cart-shopping"></i> Add to cart</button>
    <button id="sub" type="submit"> <i class="fa-solid fa-bag-shopping"></i>Buy Now</button>
  </form>
</div>


<%- include('../partials/storeFooter') %>
  </body>
</html>
